{"version":3,"sources":["components/Header.js","components/PriceChart.js","components/Subscribe.js","components/Search.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","style","headContainer","fontWeight","fontStyle","display","justifyContent","alignItems","minHeight","textAlign","flexDirection","baseUrl","config","PriceChart","state","heading","currentPrice","props","options","title","legend","position","animation","duration","easing","subscribe","setState","buttonClicked","this","fetch","method","headers","body","JSON","stringify","url","then","res","json","catch","err","console","log","chartType","width","height","data","className","calcAvgPrice","minPrice","React","Component","total","d","Number","isNaN","parseFloat","length","toLocaleString","ans","Infinity","Math","min","defaultProps","Subscribe","name","email","budget","maxPrice","requestProcessed","handleChange","event","target","value","handleSubmit","preventDefault","alert","status","align","for","required","type","onChange","max","onClick","Search","loaded","hs","e","trimmedUrl","trim","push","prices","date","price","Date","toLocaleDateString","color","id","toLowerCase","includes","code","split","firstPart","Footer","padding","paddingTop","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a8072fd5.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Header() {\n    return (\n        <div style={headContainer}>\n            <h1 style={{\n                fontWeight: 700,\n                fontStyle: \"bold\"\n            }}>\n               $ Price Tracker\n            </h1>\n            Get your favourite product at the best price possible!\n        </div>\n    );\n}\n\nconst headContainer = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"20vh\",\n    textAlign:\"center\",\n    flexDirection: \"column\"\n};","import React from 'react';\nimport Chart from \"react-google-charts\";\nimport config from '../config.json';\nconst baseUrl = config.baseUrl;\n\n\nexport default class PriceChart extends React.Component {\n\n    state = {\n        heading: \"Price Chart\",\n        currentPrice: this.props.currentPrice,\n\n        options: {\n            title: \"Price of the Product\",\n            legend: { position: \"bottom\" },\n            animation: {\n                duration: 1000,\n                easing: 'in',\n                \"startup\": true\n            }\n        }\n    }\n\n    subscribe = () => {\n        this.setState({ buttonClicked: true })\n    }\n\n    componentDidMount() {\n        if (this.state.currentPrice === false) {\n            fetch(baseUrl + '/currentPrice', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    'url': this.props.url,\n                })\n            }).then(res => res.json())\n                .then(res => {\n                    this.setState({ currentPrice: res.currentPrice });\n                })\n                .catch((err) => {\n                    console.log(err);\n                })\n        }\n    }\n\n\n    render() {\n        return (\n            <div >\n                <h2>{this.state.heading}</h2>\n\n                <Chart\n                    chartType=\"LineChart\"\n                    width=\"100%\"\n                    height=\"400px\"\n\n                    data={this.props.data}\n                    options={this.state.options}\n                />\n                <div className=\"flex\">\n                    <div>\n                        Average Price: {calcAvgPrice(this.props.data)}\n                    </div>\n                    <div>\n                        Minimum Price: {minPrice(this.props.data)}\n                    </div>\n                    <div>\n                        Current Price: {this.props.currentPrice}\n                    </div>\n                </div>\n            </div >\n        );\n    }\n\n};\n\n\nlet calcAvgPrice = (data) => {\n    let total = 0;\n    for (var d of data) {\n        if (d[1] && !Number.isNaN(Number.parseFloat(d[1])))\n            total += Number.parseFloat(d[1]);\n    }\n    let ans = (total / (data.length - 1));\n\n    return ans.toLocaleString('en-IN');\n}\n\n\nlet minPrice = (data) => {\n\n    let ans = Infinity;\n\n    for (var d of data) {\n        if (d[1] && !Number.isNaN(Number.parseFloat(d[1])))\n            ans = Math.min(ans, Number.parseFloat(d[1]));\n    }\n\n    return (ans !== Infinity) ? ans.toLocaleString('en-IN') : \"Not Available\";\n}\n\n\nPriceChart.defaultProps = {\n    currentPrice: 20,\n\n    data: [\n        [\"Date\", \"Price\"],\n        [\"27-09-2020\", 1030],\n        [\"29-09-2020\", 1170],\n        [\"30-09-2020\", 660],\n        [\"30-09-2020\", 660],\n        [\"30-09-2020\", 660],\n        [\"30-09-2020\", 660],\n        [\"30-09-2020\", 660],\n        [\"30-09-2020\", 660],\n        [\"30-09-2020\", 660],\n        [\"30-09-2020\", 660],\n        [\"30-09-2020\", 660],\n        [\"30-09-2020\", 660],\n    ]\n\n};\n","import React from 'react'\nimport config from '../config.json';\nconst baseUrl = config.baseUrl;\n\n\nexport default class Subscribe extends React.Component {\n\n    state = {\n        name: \"\",\n        email: \"\",\n        budget: \"\",\n        maxPrice: this.props.maxPrice,\n        requestProcessed: false\n    }\n\n    handleChange = (event) => {\n        const name = event.target.name;\n        this.setState({ [name]: event.target.value });\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.state.name === \"\" || this.state.email === \"\" || this.state.budget === \"\") return alert(\"Please enter all 3 fields\");\n\n\n        fetch(baseUrl + '/fetchPrice', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                'url': this.props.url,\n                'email': this.state.email,\n                'budget': this.state.budget\n            })\n        }).then(res => {\n            console.log(res);\n            if (res.status !== 500) {\n                this.setState({\n                    requestProcessed\n                        : true\n                });\n            }\n\n        })\n            .catch((err) => {\n                console.log(err);\n            })\n\n\n\n        console.log(\"Submitted\");\n    }\n\n    render() {\n\n        return (\n\n            !this.state.requestProcessed ? (<div className=\"flex col subscribe\"><h2 align=\"center\">\n                Please enter the following details\n                </h2>\n                <form>\n                    <div>\n                        <label for=\"name\" >\n                            Name\n                    </label>\n                        <input required type=\"text\" name=\"name\" className=\"textbox\" onChange={this.handleChange} />\n                    </div>\n                    <div>\n                        <label for=\"email\" >\n                            Email\n                    </label>\n                        <input required type=\"email\" name=\"email\" className=\"textbox\" onChange={this.handleChange} />\n                    </div>\n                    <div>\n                        <label for=\"budget\">Maximum Budget <span className=\"smalltext\"> (You will be notified if the price drop is less than this)</span></label>\n                        <input required min={0} max={this.state.maxPrice} type=\"number\" name=\"budget\" className=\"textbox range\" onChange={this.handleChange}></input>\n                    </div>\n                    <div style={{ textAlign: \"center\" }}>\n                        <button type=\"submit\" className=\"btn \" onClick={this.handleSubmit} > Subscribe! </button>\n                    </div>\n                </form>\n            </div>) : (<div className=\"flex col subscribe\">Your Request has been processed. Thanks for using this product.</div>)\n\n        )\n    }\n\n};\n","import React from 'react';\nimport PriceChart from './PriceChart'\nimport \"../App.css\";\nimport Subscribe from './Subscribe';\n\nimport config from '../config.json';\nconst baseUrl = config.baseUrl;\n\nexport default class Search extends React.Component {\n\n    state = {\n        loaded: false,\n        url: \"\"\n    }\n    handleChange = (event) => {\n        const name = event.target.name;\n        this.setState({ [name]: event.target.value, loaded: false });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"searchContainer\">\n                    <div className=\"flexchild\">\n                        <h2>Track Your Favourite Product</h2>\n                        <p style={{ color: \"grey\" }}> Please enter the following details: </p>\n                    </div>\n                    <form className=\"flexchild\">\n                        <label for=\"Email\">Amazon URL: </label>\n                        <input type=\"url\" required className=\"textbox\" name=\"url\" id=\"url\" onChange={this.handleChange} />\n                        <button className=\"btn\" type=\"submit\" onClick={this.hs}>Submit</button>\n                    </form>\n                </div>\n                { this.state.loaded ? (\n                    (this.state.data.length !== 1) ? (\n                        <div className=\"searchContainer\"><PriceChart data={this.state.data} url={this.state.url} currentPrice={this.state.currentPrice} /><Subscribe url={this.state.url} /></div>\n                    )\n                        : <div className=\"searchContainer\"> <div className=\"center\">We do not have sufficient data to show the chart, please Subscribe </div><Subscribe url={this.state.url} /> </div>) : \"\"}\n            </div >\n        );\n\n    }\n    trim(url){\n        url = url.toLowerCase();\n\n        if(url.includes('amazon.in')){\n            if( url.includes('gp/product/')){\n                let code = url.split('gp/product/')[1];\n                if(code){\n                    code = code.split('/')[0];\n                    console.log(code);\n                    return 'https://www.amazon.in/gp/product/' + code; \n                }\n                return false;\n            } \n            else if(url.includes('dp')){\n                let code = url.split('dp/')[1];\n                if(code){\n                    code = code.split('?')[0];\n                    code = code.split('/')[0];\n                    console.log(code);\n                    return 'https://www.amazon.in/gp/product/' + code; \n                }\n            }\n        }\n\n        if(url.includes(\"flipkart\")){\n            if(url.includes(\"p/itm\")){\n                let firstPart = url.split(\"?\")[0];\n\n                console.log(firstPart);\n                return firstPart;\n            }\n        }\n\n        return false;\n    }\n    hs = (e) => {\n\n        let trimmedUrl = this.trim(this.state.url);\n\n        console.log(\"trimmed url\", trimmedUrl);\n\n        this.setState({url: trimmedUrl});\n\n        if(!trimmedUrl){\n            e.preventDefault();\n            return alert('The url does not seem to be correct');\n        }\n        fetch(baseUrl + '/chart', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                'url': trimmedUrl,\n            })\n        }).then(res => res.json())\n            .then(res => {\n                var data = [];\n                data.push([\"Date\", \"Price\"]);\n\n                let currentPrice = false;\n                if(!res.prices){\n                    return this.setState({data: data, loaded: true});\n                }\n                for (let d of res.prices) {\n                    let date = d.date;\n                    let price = d.price;\n                    currentPrice = new Date().toLocaleDateString() === d.date ? d.price : currentPrice;\n                    data.push([date, price]);\n                }\n                this.setState({ data: data, currentPrice: currentPrice, loaded: true });\n\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n\n        e.preventDefault();\n    }\n}\n\n","import React from 'react';\n\nexport default function Footer() {\n    return (\n        <div style={headContainer}>\n            <div>\n                Bhanu Pratap Singh 2K18/CO/109\n            </div>\n        </div>\n    );\n}\n\nconst headContainer = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"10vh\",\n    textAlign: \"center\",\n    flexDirection: \"column\",\n    padding:\"2em\", \n    paddingTop: \"5em\",\n};","import React from 'react';\nimport './App.css';\nimport Header from './components/Header'\nimport Search from './components/Search'\nimport Footer from './components/Footer'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Search/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}